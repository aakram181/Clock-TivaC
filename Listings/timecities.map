Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    startup_rvmdk.o(RESET) refers to __main.o(!!!main) for __main
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xQueue1) for xQueue1
    main.o(.text.main) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.main) refers to main.o(.bss.xSemaphore0) for xSemaphore0
    main.o(.text.main) refers to main.o(.text.Task3) for Task3
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.Task2) for Task2
    main.o(.text.main) refers to main.o(.text.Task1) for Task1
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.Task3) refers to uart.o(.text.UARTInit) for UARTInit
    main.o(.text.Task3) refers to main.o(.rodata.str1.1) for .L.str.3
    main.o(.text.Task3) refers to uart.o(.text.UARTPrintString) for UARTPrintString
    main.o(.text.Task3) refers to main.o(.text.Read_Time) for Read_Time
    main.o(.text.Task3) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.Task3) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.Task3) refers to uart.o(.text.UARTPrintChar) for UARTPrintChar
    main.o(.text.Task3) refers to main.o(.rodata.cities) for cities
    main.o(.text.Task3) refers to main.o(.bss.xSemaphore0) for xSemaphore0
    main.o(.text.Task3) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Task3) refers to main.o(.bss.selection) for selection
    main.o(.ARM.exidx.text.Task3) refers to main.o(.text.Task3) for [Anonymous Symbol]
    main.o(.text.Task2) refers to lcd.o(.text.LCDInit) for LCDInit
    main.o(.text.Task2) refers to lcd.o(.text.LCDCMD) for LCDCMD
    main.o(.text.Task2) refers to main.o(.bss.selection) for selection
    main.o(.text.Task2) refers to main.o(.bss.xQueue1) for xQueue1
    main.o(.text.Task2) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.Task2) refers to main.o(.rodata.cities) for cities
    main.o(.text.Task2) refers to lcd.o(.text.LCDPrintString) for LCDPrintString
    main.o(.text.Task2) refers to main.o(.rodata.timediff) for timediff
    main.o(.text.Task2) refers to main.o(.text.ByteToStr) for ByteToStr
    main.o(.text.Task2) refers to lcd.o(.text.LCDPrintChar) for LCDPrintChar
    main.o(.ARM.exidx.text.Task2) refers to main.o(.text.Task2) for [Anonymous Symbol]
    main.o(.text.Task1) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.Task1) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.Task1) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.Task1) refers to main.o(.bss.xQueue1) for xQueue1
    main.o(.text.Task1) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Task1) refers to main.o(.text.Task1) for [Anonymous Symbol]
    main.o(.text.Read_Time) refers to uart.o(.text.UARTRx) for UARTRx
    main.o(.text.Read_Time) refers to uart.o(.text.UARTPrintChar) for UARTPrintChar
    main.o(.ARM.exidx.text.Read_Time) refers to main.o(.text.Read_Time) for [Anonymous Symbol]
    main.o(.text.Read_From_Keyboard) refers to uart.o(.text.UARTRx) for UARTRx
    main.o(.text.Read_From_Keyboard) refers to uart.o(.text.UARTPrintChar) for UARTPrintChar
    main.o(.ARM.exidx.text.Read_From_Keyboard) refers to main.o(.text.Read_From_Keyboard) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.ByteToStr) refers to main.o(.text.ByteToStr) for [Anonymous Symbol]
    main.o(.text.UART_ISR) refers to uart.o(i.UARTCharGetNonBlocking) for UARTCharGetNonBlocking
    main.o(.text.UART_ISR) refers to main.o(.bss.selection) for selection
    main.o(.text.UART_ISR) refers to uart.o(i.UARTIntClear) for UARTIntClear
    main.o(.text.UART_ISR) refers to main.o(.bss.xSemaphore0) for xSemaphore0
    main.o(.text.UART_ISR) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.ARM.exidx.text.UART_ISR) refers to main.o(.text.UART_ISR) for [Anonymous Symbol]
    lcd.o(.text.LCDCMD) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCDCMD) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCDCMD) refers to lcd.o(.text.LCDCMD) for [Anonymous Symbol]
    lcd.o(.text.LCDPrintChar) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCDPrintChar) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCDPrintChar) refers to lcd.o(.text.LCDPrintChar) for [Anonymous Symbol]
    lcd.o(.text.LCDPrintString) refers to strlen.o(.text) for strlen
    lcd.o(.text.LCDPrintString) refers to lcd.o(.text.LCDPrintChar) for LCDPrintChar
    lcd.o(.ARM.exidx.text.LCDPrintString) refers to lcd.o(.text.LCDPrintString) for [Anonymous Symbol]
    lcd.o(.text.LCDInit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    lcd.o(.text.LCDInit) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    lcd.o(.text.LCDInit) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    lcd.o(.text.LCDInit) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.text.LCDInit) refers to lcd.o(.text.LCDCMD) for LCDCMD
    lcd.o(.ARM.exidx.text.LCDInit) refers to lcd.o(.text.LCDInit) for [Anonymous Symbol]
    uart.o(.text.UARTInit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    uart.o(.text.UARTInit) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    uart.o(.text.UARTInit) refers to uart.o(i.UARTDisable) for UARTDisable
    uart.o(.text.UARTInit) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    uart.o(.text.UARTInit) refers to uart.o(i.UARTConfigSetExpClk) for UARTConfigSetExpClk
    uart.o(.text.UARTInit) refers to uart.o(i.UARTEnable) for UARTEnable
    uart.o(.text.UARTInit) refers to uart.o(i.UARTFIFOLevelSet) for UARTFIFOLevelSet
    uart.o(.text.UARTInit) refers to gpio.o(i.GPIOPinTypeUART) for GPIOPinTypeUART
    uart.o(.text.UARTInit) refers to gpio.o(i.GPIOPinConfigure) for GPIOPinConfigure
    uart.o(.text.UARTInit) refers to uart.o(i.UARTFIFOEnable) for UARTFIFOEnable
    uart.o(.text.UARTInit) refers to uart.o(i.UARTIntEnable) for UARTIntEnable
    uart.o(.text.UARTInit) refers to main.o(.text.UART_ISR) for UART_ISR
    uart.o(.text.UARTInit) refers to uart.o(i.UARTIntRegister) for UARTIntRegister
    uart.o(.text.UARTInit) refers to interrupt.o(i.IntPrioritySet) for IntPrioritySet
    uart.o(.ARM.exidx.text.UARTInit) refers to uart.o(.text.UARTInit) for [Anonymous Symbol]
    uart.o(.text.UARTRx) refers to uart.o(i.UARTCharsAvail) for UARTCharsAvail
    uart.o(.text.UARTRx) refers to uart.o(i.UARTCharGet) for UARTCharGet
    uart.o(.ARM.exidx.text.UARTRx) refers to uart.o(.text.UARTRx) for [Anonymous Symbol]
    uart.o(.text.UARTPrintChar) refers to uart.o(i.UARTCharPut) for UARTCharPut
    uart.o(.ARM.exidx.text.UARTPrintChar) refers to uart.o(.text.UARTPrintChar) for [Anonymous Symbol]
    uart.o(.text.UARTPrintString) refers to uart.o(i.UARTCharPut) for UARTCharPut
    uart.o(.ARM.exidx.text.UARTPrintString) refers to uart.o(.text.UARTPrintString) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_rvmdk.o(RESET) for Reset_Handler
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for NMI_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvProcessReceivedCommands) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    uart.o(i.UARTIntRegister) refers to uart.o(.constdata) for .constdata
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    uart.o(i.UARTIntUnregister) refers to uart.o(.constdata) for .constdata
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing startup_rvmdk.o(STACK), (256 bytes).
    Removing startup_rvmdk.o(HEAP), (0 bytes).
    Removing startup_rvmdk.o(.text), (0 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task3), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task2), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task1), (8 bytes).
    Removing main.o(.ARM.exidx.text.Read_Time), (8 bytes).
    Removing main.o(.text.Read_From_Keyboard), (70 bytes).
    Removing main.o(.ARM.exidx.text.Read_From_Keyboard), (8 bytes).
    Removing main.o(.ARM.exidx.text.ByteToStr), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART_ISR), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCDCMD), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCDPrintChar), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCDPrintString), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCDInit), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.UARTInit), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UARTRx), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UARTPrintChar), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UARTPrintString), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (102 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (264 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (320 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.text.vTaskDelayUntil), (276 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (246 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (422 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (346 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (200 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (230 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (208 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (114 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (214 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (368 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (440 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (300 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyValueClear), (76 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (118 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (90 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (78 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (44 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (76 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (94 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntClear), (6 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntEnable), (12 bytes).
    Removing gpio.o(i.GPIOIntRegister), (26 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntTypeSet), (80 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinRead), (6 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOInput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(i._GPIOIntNumberGet), (80 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing uart.o(i.UART9BitAddrSend), (38 bytes).
    Removing uart.o(i.UART9BitAddrSet), (10 bytes).
    Removing uart.o(i.UART9BitDisable), (14 bytes).
    Removing uart.o(i.UART9BitEnable), (14 bytes).
    Removing uart.o(i.UARTBreakCtl), (18 bytes).
    Removing uart.o(i.UARTBusy), (8 bytes).
    Removing uart.o(i.UARTCharPutNonBlocking), (16 bytes).
    Removing uart.o(i.UARTClockSourceGet), (6 bytes).
    Removing uart.o(i.UARTClockSourceSet), (6 bytes).
    Removing uart.o(i.UARTConfigGetExpClk), (46 bytes).
    Removing uart.o(i.UARTDMADisable), (10 bytes).
    Removing uart.o(i.UARTDMAEnable), (8 bytes).
    Removing uart.o(i.UARTDisableSIR), (10 bytes).
    Removing uart.o(i.UARTEnableSIR), (18 bytes).
    Removing uart.o(i.UARTFIFODisable), (10 bytes).
    Removing uart.o(i.UARTFIFOLevelGet), (16 bytes).
    Removing uart.o(i.UARTFlowControlGet), (8 bytes).
    Removing uart.o(i.UARTFlowControlSet), (12 bytes).
    Removing uart.o(i.UARTIntDisable), (10 bytes).
    Removing uart.o(i.UARTIntStatus), (10 bytes).
    Removing uart.o(i.UARTIntUnregister), (88 bytes).
    Removing uart.o(i.UARTLoopbackEnable), (10 bytes).
    Removing uart.o(i.UARTModemControlClear), (14 bytes).
    Removing uart.o(i.UARTModemControlGet), (8 bytes).
    Removing uart.o(i.UARTModemControlSet), (12 bytes).
    Removing uart.o(i.UARTModemStatusGet), (10 bytes).
    Removing uart.o(i.UARTParityModeGet), (8 bytes).
    Removing uart.o(i.UARTParityModeSet), (12 bytes).
    Removing uart.o(i.UARTRxErrorClear), (6 bytes).
    Removing uart.o(i.UARTRxErrorGet), (8 bytes).
    Removing uart.o(i.UARTSmartCardDisable), (10 bytes).
    Removing uart.o(i.UARTSmartCardEnable), (22 bytes).
    Removing uart.o(i.UARTSpaceAvail), (10 bytes).
    Removing uart.o(i.UARTTxIntModeGet), (8 bytes).
    Removing uart.o(i.UARTTxIntModeSet), (12 bytes).
    Removing cpu.o(.emb_text), (38 bytes).

422 unused section(s) (total 16644 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    UART.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    startup_rvmdk.S                          0x00000000   Number         0  startup_rvmdk.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x000002a8   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x000002e4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000300   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x00000302   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000306   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000308   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000030a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000030c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000030c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000030c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000312   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000312   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000316   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000316   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000031e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000320   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000320   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000324   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000032c   Number         0  sysctl.o(.emb_text)
    .emb_text                                0x0000032c   Section        6  sysctl.o(.emb_text)
    $v0                                      0x00000334   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000334   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000448   Section        0  strlen.o(.text)
    .text                                    0x00000486   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x00000510   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000520   Section        0  heapauxi.o(.text)
    .text                                    0x00000526   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0000058a   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005d8   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000622   Section        0  exit.o(.text)
    .text                                    0x00000634   Section        8  libspace.o(.text)
    .text                                    0x0000063c   Section        0  sys_exit.o(.text)
    .text                                    0x00000648   Section        2  use_no_semi.o(.text)
    .text                                    0x0000064a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x0000064c   Section        0  main.o(.text.ByteToStr)
    [Anonymous Symbol]                       0x000006b0   Section        0  lcd.o(.text.LCDCMD)
    [Anonymous Symbol]                       0x00000708   Section        0  lcd.o(.text.LCDInit)
    [Anonymous Symbol]                       0x000007b8   Section        0  lcd.o(.text.LCDPrintChar)
    [Anonymous Symbol]                       0x0000080c   Section        0  lcd.o(.text.LCDPrintString)
    [Anonymous Symbol]                       0x00000850   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000008b0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000008b4   Section        0  main.o(.text.Read_Time)
    [Anonymous Symbol]                       0x00000910   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000930   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000934   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000970   Section        0  system_tm4c123.o(.text.SystemInit)
    Task1                                    0x00000a7d   Thumb Code   160  main.o(.text.Task1)
    [Anonymous Symbol]                       0x00000a7c   Section        0  main.o(.text.Task1)
    Task2                                    0x00000b1d   Thumb Code   216  main.o(.text.Task2)
    [Anonymous Symbol]                       0x00000b1c   Section        0  main.o(.text.Task2)
    Task3                                    0x00000bf5   Thumb Code   308  main.o(.text.Task3)
    [Anonymous Symbol]                       0x00000bf4   Section        0  main.o(.text.Task3)
    [Anonymous Symbol]                       0x00000d28   Section        0  uart.o(.text.UARTInit)
    [Anonymous Symbol]                       0x00000ddc   Section        0  uart.o(.text.UARTPrintChar)
    [Anonymous Symbol]                       0x00000df8   Section        0  uart.o(.text.UARTPrintString)
    [Anonymous Symbol]                       0x00000e24   Section        0  uart.o(.text.UARTRx)
    [Anonymous Symbol]                       0x00000e4c   Section        0  main.o(.text.UART_ISR)
    [Anonymous Symbol]                       0x00000ea8   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00000f10   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00000fcd   Thumb Code   252  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00000fcc   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000010c9   Thumb Code   278  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000010c8   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x000011e1   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x000011e0   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x0000124d   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x0000124c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x000012a9   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x000012a8   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x000012ed   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x000012ec   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x000013b9   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x000013b8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x000013d1   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x000013d0   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetExpectedIdleTime                   0x000013f9   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x000013f8   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvGetNextExpireTime                     0x00001475   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00001474   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x000014b5   Thumb Code   154  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x000014b4   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x00001551   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00001550   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000015a1   Thumb Code   296  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000015a0   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x000016c9   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x000016c8   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x00001759   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x00001758   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x000017e1   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000017e0   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00001809   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00001808   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x00001839   Thumb Code   184  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001838   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x000018f1   Thumb Code    34  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x000018f0   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00001919   Thumb Code   142  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00001918   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x000019a9   Thumb Code   402  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x000019a8   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00001b3d   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00001b3c   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvResetNextTaskUnblockTime              0x00001bd9   Thumb Code    70  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001bd8   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00001c21   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00001c20   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00001c65   Thumb Code   212  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00001c64   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00001d39   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001d38   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001d85   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001d84   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00001da5   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001da4   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001e70   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001f14   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00001f40   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00001fa0   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001fe8   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00002018   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002028   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00002094   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x000020d1   Thumb Code    14  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000020d0   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000020e4   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x0000213c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00002188   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x000021ac   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00002224   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00002430   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x000024b4   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00002518   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00002588   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x000025ac   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x000025bc   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002600   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00002654   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00002794   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00002848   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00002894   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x000028a4   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002964   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002abc   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002b28   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00002be4   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00002e58   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x00002fe0   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00003130   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x0000330c   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00003538   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00003630   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x000036c8   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00003700   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00003714   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x000038cc   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x000039e4   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00003b00   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00003bc8   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00003d40   Section        0  timers.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x00003dac   Section        0  timers.o(.text.xTimerGenericCommand)
    $v0                                      0x00003e5c   Number         0  startup_rvmdk.o(RESET)
    RESET                                    0x00003e5c   Section       28  startup_rvmdk.o(RESET)
    i.GPIODirModeSet                         0x00003e78   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOPadConfigSet                       0x00003ea0   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinConfigure                       0x00004010   Section        0  gpio.o(i.GPIOPinConfigure)
    i.GPIOPinTypeGPIOOutput                  0x00004054   Section        0  gpio.o(i.GPIOPinTypeGPIOOutput)
    i.GPIOPinTypeUART                        0x00004070   Section        0  gpio.o(i.GPIOPinTypeUART)
    i.GPIOPinWrite                           0x0000408c   Section        0  gpio.o(i.GPIOPinWrite)
    i.IntEnable                              0x00004094   Section        0  interrupt.o(i.IntEnable)
    i.IntPrioritySet                         0x000040f8   Section        0  interrupt.o(i.IntPrioritySet)
    i.IntRegister                            0x00004120   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlClockGet                         0x00004154   Section        0  sysctl.o(i.SysCtlClockGet)
    i.SysCtlPeripheralEnable                 0x000042a8   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x000042d0   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.UARTCharGet                            0x000042fc   Section        0  uart.o(i.UARTCharGet)
    i.UARTCharGetNonBlocking                 0x00004308   Section        0  uart.o(i.UARTCharGetNonBlocking)
    i.UARTCharPut                            0x00004318   Section        0  uart.o(i.UARTCharPut)
    i.UARTCharsAvail                         0x00004324   Section        0  uart.o(i.UARTCharsAvail)
    i.UARTConfigSetExpClk                    0x0000432e   Section        0  uart.o(i.UARTConfigSetExpClk)
    i.UARTDisable                            0x0000439c   Section        0  uart.o(i.UARTDisable)
    i.UARTEnable                             0x000043ba   Section        0  uart.o(i.UARTEnable)
    i.UARTFIFOEnable                         0x000043ce   Section        0  uart.o(i.UARTFIFOEnable)
    i.UARTFIFOLevelSet                       0x000043d8   Section        0  uart.o(i.UARTFIFOLevelSet)
    i.UARTIntClear                           0x000043de   Section        0  uart.o(i.UARTIntClear)
    i.UARTIntEnable                          0x000043e2   Section        0  uart.o(i.UARTIntEnable)
    i.UARTIntRegister                        0x000043ec   Section        0  uart.o(i.UARTIntRegister)
    $v0                                      0x00004444   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00004444   Section       26  fpinit.o(x$fpl$fpinit)
    g_ppui32GPIOIntMapBlizzard               0x00004460   Data         192  gpio.o(.constdata)
    .constdata                               0x00004460   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x00004520   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x000045f8   Data         144  gpio.o(.constdata)
    g_pui32Priority                          0x00004688   Data          32  interrupt.o(.constdata)
    .constdata                               0x00004688   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x000046a8   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x00004744   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x00004758   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x0000476c   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x00004780   Data          20  interrupt.o(.constdata)
    g_pui32VCOFrequencies                    0x00004794   Data           8  sysctl.o(.constdata)
    .constdata                               0x00004794   Section      596  sysctl.o(.constdata)
    g_pui32Xtals                             0x0000479c   Data         108  sysctl.o(.constdata)
    g_pppui32XTALtoVCO                       0x00004808   Data         432  sysctl.o(.constdata)
    g_sXTALtoMEMTIM                          0x000049b8   Data          48  sysctl.o(.constdata)
    g_ppui32UARTIntMap                       0x000049e8   Data          64  uart.o(.constdata)
    .constdata                               0x000049e8   Section      128  uart.o(.constdata)
    g_ppui32UARTIntMapSnowflake              0x00004a28   Data          64  uart.o(.constdata)
    cities                                   0x00004a68   Data         100  main.o(.rodata.cities)
    [Anonymous Symbol]                       0x00004a68   Section        0  main.o(.rodata.cities)
    .L.str.5                                 0x00004acc   Data          44  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004acc   Section        0  main.o(.rodata.str1.1)
    .L.str.6                                 0x00004af8   Data          33  main.o(.rodata.str1.1)
    .L.str.4                                 0x00004b19   Data          27  main.o(.rodata.str1.1)
    .L.str.3                                 0x00004b34   Data          27  main.o(.rodata.str1.1)
    .L.str.8                                 0x00004b4c   Data           3  main.o(.rodata.str1.1)
    .L.str.9                                 0x00004b4f   Data          13  main.o(.rodata.str1.1)
    .L.str.7                                 0x00004b5c   Data           3  main.o(.rodata.str1.1)
    .L.str                                   0x00004b5f   Data          16  main.o(.rodata.str1.1)
    .L.str.1                                 0x00004b6f   Data          15  main.o(.rodata.str1.1)
    .L.str.2                                 0x00004b7e   Data          15  main.o(.rodata.str1.1)
    .L.str                                   0x00004b8d   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004b8d   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x00004b92   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004b92   Section        0  timers.o(.rodata.str1.1)
    timediff                                 0x00004b9c   Data          40  main.o(.rodata.timediff)
    [Anonymous Symbol]                       0x00004b9c   Section        0  main.o(.rodata.timediff)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    .bss                                     0x20000670   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x200006d0   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200006d0   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x200006d4   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x200006d4   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    pxCurrentTimerList                       0x200006dc   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200006dc   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200006e0   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200006e0   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200006e4   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200006e4   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200006e8   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200006e8   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200006ec   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200006ec   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000754   Data        8192  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000754   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002754   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002754   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20002758   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20002758   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x2000275c   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x2000275c   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20002760   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20002760   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20002764   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002764   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002768   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002768   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x2000276c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000276c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002770   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002770   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002774   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002774   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002778   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002778   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x2000278c   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x2000278c   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x200027a0   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200027a0   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200027b4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200027b4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x200027c8   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200027c8   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x200027cc   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x200027cc   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextFreeByte                            0x200027d0   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x200027d0   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x200027d4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200027d4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200027d8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200027d8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x200027dc   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200027dc   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200027e0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200027e0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200027fc   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200027fc   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x20002804   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002804   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002818   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002818   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x2000282c   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x2000282c   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002830   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002830   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002834   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002834   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002838   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002838   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002840   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20002840   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20002840   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20002840   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20002a40   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x000002a9   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x000002a9   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x000002e5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000301   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000309   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000030d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000030d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000030d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000031f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000325   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SysCtlDelay                              0x0000032d   Thumb Code     6  sysctl.o(.emb_text)
    NMI_Handler                              0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000429   Thumb Code     0  startup_tm4c123.o(.text)
    strlen                                   0x00000449   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x00000487   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000487   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000004ed   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x00000511   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x00000511   Thumb Code     0  aeabi_memset4.o(.text)
    __use_two_region_memory                  0x00000521   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000523   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000525   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000527   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000527   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000527   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0000056f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x0000058b   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0000058b   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0000058b   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0000058f   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x000005d9   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000623   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000635   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000635   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000635   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000063d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000649   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000649   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000064b   Thumb Code     0  indicate_semi.o(.text)
    ByteToStr                                0x0000064d   Thumb Code   100  main.o(.text.ByteToStr)
    LCDCMD                                   0x000006b1   Thumb Code    86  lcd.o(.text.LCDCMD)
    LCDInit                                  0x00000709   Thumb Code   174  lcd.o(.text.LCDInit)
    LCDPrintChar                             0x000007b9   Thumb Code    82  lcd.o(.text.LCDPrintChar)
    LCDPrintString                           0x0000080d   Thumb Code    56  lcd.o(.text.LCDPrintString)
    PendSV_Handler                           0x00000851   Thumb Code   100  port.o(.text.PendSV_Handler)
    Read_Time                                0x000008b5   Thumb Code    78  main.o(.text.Read_Time)
    SVC_Handler                              0x00000911   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000935   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000971   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    UARTInit                                 0x00000d29   Thumb Code   180  uart.o(.text.UARTInit)
    UARTPrintChar                            0x00000ddd   Thumb Code    28  uart.o(.text.UARTPrintChar)
    UARTPrintString                          0x00000df9   Thumb Code    42  uart.o(.text.UARTPrintString)
    UARTRx                                   0x00000e25   Thumb Code    38  uart.o(.text.UARTRx)
    UART_ISR                                 0x00000e4d   Thumb Code    92  main.o(.text.UART_ISR)
    eTaskConfirmSleepModeStatus              0x00000ea9   Thumb Code   104  tasks.o(.text.eTaskConfirmSleepModeStatus)
    main                                     0x00000f11   Thumb Code   186  main.o(.text.main)
    pvPortMalloc                             0x00001e71   Thumb Code   164  heap_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00001f15   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00001f41   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x00001fa1   Thumb Code    72  list.o(.text.uxListRemove)
    vListInitialise                          0x00001fe9   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00002019   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002029   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x00002095   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x000020e5   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x0000213d   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x00002189   Thumb Code    36  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x000021ad   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00002225   Thumb Code   524  port.o(.text.vPortSuppressTicksAndSleep)
    vPortValidateInterruptPriority           0x00002431   Thumb Code   132  port.o(.text.vPortValidateInterruptPriority)
    vQueueWaitForMessageRestricted           0x000024b5   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00002519   Thumb Code   110  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00002589   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000025ad   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000025bd   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00002601   Thumb Code    82  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x00002655   Thumb Code   320  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00002795   Thumb Code   178  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00002849   Thumb Code    76  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00002895   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x000028a5   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00002965   Thumb Code   342  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00002abd   Thumb Code   108  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00002b29   Thumb Code   186  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00002be5   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00002e59   Thumb Code   392  queue.o(.text.xQueueGenericSendFromISR)
    xQueueGiveFromISR                        0x00002fe1   Thumb Code   334  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x00003131   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x0000330d   Thumb Code   556  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00003539   Thumb Code   246  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00003631   Thumb Code   152  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x000036c9   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00003701   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00003715   Thumb Code   440  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x000038cd   Thumb Code   280  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x000039e5   Thumb Code   282  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00003b01   Thumb Code   198  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003bc9   Thumb Code   376  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00003d41   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00003dad   Thumb Code   176  timers.o(.text.xTimerGenericCommand)
    Reset_Handler                            0x00003e5d   Thumb Code     0  startup_rvmdk.o(RESET)
    GPIODirModeSet                           0x00003e79   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOPadConfigSet                         0x00003ea1   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinConfigure                         0x00004011   Thumb Code    60  gpio.o(i.GPIOPinConfigure)
    GPIOPinTypeGPIOOutput                    0x00004055   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOOutput)
    GPIOPinTypeUART                          0x00004071   Thumb Code    28  gpio.o(i.GPIOPinTypeUART)
    GPIOPinWrite                             0x0000408d   Thumb Code     6  gpio.o(i.GPIOPinWrite)
    IntEnable                                0x00004095   Thumb Code    92  interrupt.o(i.IntEnable)
    IntPrioritySet                           0x000040f9   Thumb Code    36  interrupt.o(i.IntPrioritySet)
    IntRegister                              0x00004121   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlClockGet                           0x00004155   Thumb Code   304  sysctl.o(i.SysCtlClockGet)
    SysCtlPeripheralEnable                   0x000042a9   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x000042d1   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    UARTCharGet                              0x000042fd   Thumb Code    12  uart.o(i.UARTCharGet)
    UARTCharGetNonBlocking                   0x00004309   Thumb Code    16  uart.o(i.UARTCharGetNonBlocking)
    UARTCharPut                              0x00004319   Thumb Code    12  uart.o(i.UARTCharPut)
    UARTCharsAvail                           0x00004325   Thumb Code    10  uart.o(i.UARTCharsAvail)
    UARTConfigSetExpClk                      0x0000432f   Thumb Code   110  uart.o(i.UARTConfigSetExpClk)
    UARTDisable                              0x0000439d   Thumb Code    30  uart.o(i.UARTDisable)
    UARTEnable                               0x000043bb   Thumb Code    20  uart.o(i.UARTEnable)
    UARTFIFOEnable                           0x000043cf   Thumb Code    10  uart.o(i.UARTFIFOEnable)
    UARTFIFOLevelSet                         0x000043d9   Thumb Code     6  uart.o(i.UARTFIFOLevelSet)
    UARTIntClear                             0x000043df   Thumb Code     4  uart.o(i.UARTIntClear)
    UARTIntEnable                            0x000043e3   Thumb Code     8  uart.o(i.UARTIntEnable)
    UARTIntRegister                          0x000043ed   Thumb Code    70  uart.o(i.UARTIntRegister)
    _fp_init                                 0x00004445   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0000445d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0000445d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x00004bc4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004be4   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000670   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200006d0   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x200006d8   Data           4  tasks.o(.bss.pxCurrentTCB)
    selection                                0x20000750   Data           4  main.o(.bss.selection)
    xQueue1                                  0x200027f4   Data           4  main.o(.bss.xQueue1)
    xQueue2                                  0x200027f8   Data           4  main.o(.bss.xQueue2)
    xSemaphore0                              0x20002800   Data           4  main.o(.bss.xSemaphore0)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00003e5d

  Load Region LR_1 (Base: 0x00000000, Size: 0x0000526c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00004c18])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004be4, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           72    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1606  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         1775    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000003a   Code   RO         1773    !!dczerorl          c_w.l(__dczerorl.o)
    0x000002e2   0x000002e2   0x00000002   PAD
    0x000002e4   0x000002e4   0x0000001c   Code   RO         1777    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000300   0x00000300   0x00000002   Code   RO         1637    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000302   0x00000302   0x00000004   Code   RO         1643    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1646    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1649    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1651    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1653    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1656    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1658    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1660    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1662    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1664    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1666    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1668    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1670    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1672    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1674    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1676    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1680    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1682    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1684    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1686    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000002   Code   RO         1687    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000002   Code   RO         1709    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1724    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1726    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1729    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1732    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1734    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1737    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000002   Code   RO         1738    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1608    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1614    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000030c   0x0000030c   0x00000006   Code   RO         1626    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000312   0x00000312   0x00000000   Code   RO         1616    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000004   Code   RO         1617    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         1619    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000008   Code   RO         1620    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000031e   0x0000031e   0x00000002   Code   RO         1641    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000320   0x00000320   0x00000000   Code   RO         1689    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000320   0x00000320   0x00000004   Code   RO         1690    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000324   0x00000324   0x00000006   Code   RO         1691    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000032a   0x0000032a   0x00000002   PAD
    0x0000032c   0x0000032c   0x00000006   Code   RO          943    .emb_text           driverlib.lib(sysctl.o)
    0x00000332   0x00000332   0x00000002   PAD
    0x00000334   0x00000334   0x00000114   Code   RO           73    .text               startup_tm4c123.o
    0x00000448   0x00000448   0x0000003e   Code   RO         1598    .text               c_w.l(strlen.o)
    0x00000486   0x00000486   0x0000008a   Code   RO         1600    .text               c_w.l(rt_memcpy_v6.o)
    0x00000510   0x00000510   0x00000010   Code   RO         1602    .text               c_w.l(aeabi_memset4.o)
    0x00000520   0x00000520   0x00000006   Code   RO         1604    .text               c_w.l(heapauxi.o)
    0x00000526   0x00000526   0x00000064   Code   RO         1609    .text               c_w.l(rt_memcpy_w.o)
    0x0000058a   0x0000058a   0x0000004e   Code   RO         1611    .text               c_w.l(rt_memclr_w.o)
    0x000005d8   0x000005d8   0x0000004a   Code   RO         1628    .text               c_w.l(sys_stackheap_outer.o)
    0x00000622   0x00000622   0x00000012   Code   RO         1630    .text               c_w.l(exit.o)
    0x00000634   0x00000634   0x00000008   Code   RO         1638    .text               c_w.l(libspace.o)
    0x0000063c   0x0000063c   0x0000000c   Code   RO         1699    .text               c_w.l(sys_exit.o)
    0x00000648   0x00000648   0x00000002   Code   RO         1714    .text               c_w.l(use_no_semi.o)
    0x0000064a   0x0000064a   0x00000000   Code   RO         1716    .text               c_w.l(indicate_semi.o)
    0x0000064a   0x0000064a   0x00000002   PAD
    0x0000064c   0x0000064c   0x00000064   Code   RO           22    .text.ByteToStr     main.o
    0x000006b0   0x000006b0   0x00000056   Code   RO           41    .text.LCDCMD        lcd.o
    0x00000706   0x00000706   0x00000002   PAD
    0x00000708   0x00000708   0x000000ae   Code   RO           47    .text.LCDInit       lcd.o
    0x000007b6   0x000007b6   0x00000002   PAD
    0x000007b8   0x000007b8   0x00000052   Code   RO           43    .text.LCDPrintChar  lcd.o
    0x0000080a   0x0000080a   0x00000002   PAD
    0x0000080c   0x0000080c   0x00000038   Code   RO           45    .text.LCDPrintString  lcd.o
    0x00000844   0x00000844   0x0000000c   PAD
    0x00000850   0x00000850   0x00000064   Code   RO          130    .text.PendSV_Handler  port.o
    0x000008b4   0x000008b4   0x0000004e   Code   RO           18    .text.Read_Time     main.o
    0x00000902   0x00000902   0x0000000e   PAD
    0x00000910   0x00000910   0x00000024   Code   RO          114    .text.SVC_Handler   port.o
    0x00000934   0x00000934   0x0000003c   Code   RO          132    .text.SysTick_Handler  port.o
    0x00000970   0x00000970   0x0000010c   Code   RO           82    .text.SystemInit    system_tm4c123.o
    0x00000a7c   0x00000a7c   0x000000a0   Code   RO           16    .text.Task1         main.o
    0x00000b1c   0x00000b1c   0x000000d8   Code   RO           14    .text.Task2         main.o
    0x00000bf4   0x00000bf4   0x00000134   Code   RO           12    .text.Task3         main.o
    0x00000d28   0x00000d28   0x000000b4   Code   RO           56    .text.UARTInit      uart.o
    0x00000ddc   0x00000ddc   0x0000001c   Code   RO           60    .text.UARTPrintChar  uart.o
    0x00000df8   0x00000df8   0x0000002a   Code   RO           62    .text.UARTPrintString  uart.o
    0x00000e22   0x00000e22   0x00000002   PAD
    0x00000e24   0x00000e24   0x00000026   Code   RO           58    .text.UARTRx        uart.o
    0x00000e4a   0x00000e4a   0x00000002   PAD
    0x00000e4c   0x00000e4c   0x0000005c   Code   RO           24    .text.UART_ISR      main.o
    0x00000ea8   0x00000ea8   0x00000068   Code   RO          350    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00000f10   0x00000f10   0x000000ba   Code   RO           10    .text.main          main.o
    0x00000fca   0x00000fca   0x00000002   PAD
    0x00000fcc   0x00000fcc   0x000000fc   Code   RO          272    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000010c8   0x000010c8   0x00000116   Code   RO          260    .text.prvAddNewTaskToReadyList  tasks.o
    0x000011de   0x000011de   0x00000002   PAD
    0x000011e0   0x000011e0   0x0000006a   Code   RO          425    .text.prvCheckForValidListAndQueue  timers.o
    0x0000124a   0x0000124a   0x00000002   PAD
    0x0000124c   0x0000124c   0x0000005a   Code   RO          390    .text.prvCheckTasksWaitingTermination  tasks.o
    0x000012a6   0x000012a6   0x00000002   PAD
    0x000012a8   0x000012a8   0x00000042   Code   RO          207    .text.prvCopyDataFromQueue  queue.o
    0x000012ea   0x000012ea   0x00000002   PAD
    0x000012ec   0x000012ec   0x000000cc   Code   RO          193    .text.prvCopyDataToQueue  queue.o
    0x000013b8   0x000013b8   0x00000018   Code   RO          264    .text.prvDeleteTCB  tasks.o
    0x000013d0   0x000013d0   0x00000026   Code   RO          211    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x000013f6   0x000013f6   0x00000002   PAD
    0x000013f8   0x000013f8   0x0000007c   Code   RO          392    .text.prvGetExpectedIdleTime  tasks.o
    0x00001474   0x00001474   0x00000040   Code   RO          461    .text.prvGetNextExpireTime  timers.o
    0x000014b4   0x000014b4   0x0000009a   Code   RO          298    .text.prvIdleTask   tasks.o
    0x0000154e   0x0000154e   0x00000002   PAD
    0x00001550   0x00001550   0x0000004e   Code   RO          173    .text.prvInitialiseNewQueue  queue.o
    0x0000159e   0x0000159e   0x00000002   PAD
    0x000015a0   0x000015a0   0x00000128   Code   RO          258    .text.prvInitialiseNewTask  tasks.o
    0x000016c8   0x000016c8   0x0000008e   Code   RO          388    .text.prvInitialiseTaskLists  tasks.o
    0x00001756   0x00001756   0x00000002   PAD
    0x00001758   0x00001758   0x00000086   Code   RO          473    .text.prvInsertTimerInActiveList  timers.o
    0x000017de   0x000017de   0x00000002   PAD
    0x000017e0   0x000017e0   0x00000028   Code   RO          209    .text.prvIsQueueEmpty  queue.o
    0x00001808   0x00001808   0x0000002e   Code   RO          197    .text.prvIsQueueFull  queue.o
    0x00001836   0x00001836   0x00000002   PAD
    0x00001838   0x00001838   0x000000b8   Code   RO          195    .text.prvNotifyQueueSetContainer  queue.o
    0x000018f0   0x000018f0   0x00000028   Code   RO          122    .text.prvPortStartFirstTask  port.o
    0x00001918   0x00001918   0x0000008e   Code   RO          469    .text.prvProcessExpiredTimer  timers.o
    0x000019a6   0x000019a6   0x00000002   PAD
    0x000019a8   0x000019a8   0x00000192   Code   RO          465    .text.prvProcessReceivedCommands  timers.o
    0x00001b3a   0x00001b3a   0x00000002   PAD
    0x00001b3c   0x00001b3c   0x0000009a   Code   RO          463    .text.prvProcessTimerOrBlockTask  timers.o
    0x00001bd6   0x00001bd6   0x00000002   PAD
    0x00001bd8   0x00001bd8   0x00000046   Code   RO          266    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001c1e   0x00001c1e   0x00000002   PAD
    0x00001c20   0x00001c20   0x00000044   Code   RO          467    .text.prvSampleTimeNow  timers.o
    0x00001c64   0x00001c64   0x000000d4   Code   RO          471    .text.prvSwitchTimerLists  timers.o
    0x00001d38   0x00001d38   0x0000004c   Code   RO          112    .text.prvTaskExitError  port.o
    0x00001d84   0x00001d84   0x0000001e   Code   RO          427    .text.prvTimerTask  timers.o
    0x00001da2   0x00001da2   0x00000002   PAD
    0x00001da4   0x00001da4   0x000000cc   Code   RO          199    .text.prvUnlockQueue  queue.o
    0x00001e70   0x00001e70   0x000000a4   Code   RO          151    .text.pvPortMalloc  heap_1.o
    0x00001f14   0x00001f14   0x0000002c   Code   RO          372    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00001f40   0x00001f40   0x0000005e   Code   RO          110    .text.pxPortInitialiseStack  port.o
    0x00001f9e   0x00001f9e   0x00000002   PAD
    0x00001fa0   0x00001fa0   0x00000048   Code   RO          101    .text.uxListRemove  list.o
    0x00001fe8   0x00001fe8   0x0000002e   Code   RO           93    .text.vListInitialise  list.o
    0x00002016   0x00002016   0x00000002   PAD
    0x00002018   0x00002018   0x0000000e   Code   RO           95    .text.vListInitialiseItem  list.o
    0x00002026   0x00002026   0x00000002   PAD
    0x00002028   0x00002028   0x0000006a   Code   RO           99    .text.vListInsert   list.o
    0x00002092   0x00002092   0x00000002   PAD
    0x00002094   0x00002094   0x0000003a   Code   RO           97    .text.vListInsertEnd  list.o
    0x000020ce   0x000020ce   0x00000002   PAD
    0x000020d0   0x000020d0   0x00000014   Code   RO          120    .text.vPortEnableVFP  port.o
    0x000020e4   0x000020e4   0x00000056   Code   RO          126    .text.vPortEnterCritical  port.o
    0x0000213a   0x0000213a   0x00000002   PAD
    0x0000213c   0x0000213c   0x0000004a   Code   RO          128    .text.vPortExitCritical  port.o
    0x00002186   0x00002186   0x00000002   PAD
    0x00002188   0x00002188   0x00000024   Code   RO          153    .text.vPortFree     heap_1.o
    0x000021ac   0x000021ac   0x00000078   Code   RO          118    .text.vPortSetupTimerInterrupt  port.o
    0x00002224   0x00002224   0x0000020c   Code   RO          134    .text.vPortSuppressTicksAndSleep  port.o
    0x00002430   0x00002430   0x00000084   Code   RO          136    .text.vPortValidateInterruptPriority  port.o
    0x000024b4   0x000024b4   0x00000064   Code   RO          237    .text.vQueueWaitForMessageRestricted  queue.o
    0x00002518   0x00002518   0x0000006e   Code   RO          276    .text.vTaskDelay    tasks.o
    0x00002586   0x00002586   0x00000002   PAD
    0x00002588   0x00002588   0x00000024   Code   RO          340    .text.vTaskInternalSetTimeOutState  tasks.o
    0x000025ac   0x000025ac   0x0000000e   Code   RO          344    .text.vTaskMissedYield  tasks.o
    0x000025ba   0x000025ba   0x00000002   PAD
    0x000025bc   0x000025bc   0x00000042   Code   RO          328    .text.vTaskPlaceOnEventList  tasks.o
    0x000025fe   0x000025fe   0x00000002   PAD
    0x00002600   0x00002600   0x00000052   Code   RO          332    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x00002652   0x00002652   0x00000002   PAD
    0x00002654   0x00002654   0x00000140   Code   RO          368    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00002794   0x00002794   0x000000b2   Code   RO          296    .text.vTaskStartScheduler  tasks.o
    0x00002846   0x00002846   0x00000002   PAD
    0x00002848   0x00002848   0x0000004c   Code   RO          322    .text.vTaskStepTick  tasks.o
    0x00002894   0x00002894   0x00000010   Code   RO          270    .text.vTaskSuspendAll  tasks.o
    0x000028a4   0x000028a4   0x000000be   Code   RO          288    .text.vTaskSwitchContext  tasks.o
    0x00002962   0x00002962   0x00000002   PAD
    0x00002964   0x00002964   0x00000156   Code   RO          116    .text.xPortStartScheduler  port.o
    0x00002aba   0x00002aba   0x00000002   PAD
    0x00002abc   0x00002abc   0x0000006c   Code   RO          171    .text.xQueueGenericCreate  queue.o
    0x00002b28   0x00002b28   0x000000ba   Code   RO          169    .text.xQueueGenericReset  queue.o
    0x00002be2   0x00002be2   0x00000002   PAD
    0x00002be4   0x00002be4   0x00000274   Code   RO          185    .text.xQueueGenericSend  queue.o
    0x00002e58   0x00002e58   0x00000188   Code   RO          201    .text.xQueueGenericSendFromISR  queue.o
    0x00002fe0   0x00002fe0   0x0000014e   Code   RO          203    .text.xQueueGiveFromISR  queue.o
    0x0000312e   0x0000312e   0x00000002   PAD
    0x00003130   0x00003130   0x000001dc   Code   RO          205    .text.xQueueReceive  queue.o
    0x0000330c   0x0000330c   0x0000022c   Code   RO          189    .text.xQueueSemaphoreTake  queue.o
    0x00003538   0x00003538   0x000000f6   Code   RO          342    .text.xTaskCheckForTimeOut  tasks.o
    0x0000362e   0x0000362e   0x00000002   PAD
    0x00003630   0x00003630   0x00000098   Code   RO          256    .text.xTaskCreate   tasks.o
    0x000036c8   0x000036c8   0x00000038   Code   RO          362    .text.xTaskGetSchedulerState  tasks.o
    0x00003700   0x00003700   0x00000014   Code   RO          304    .text.xTaskGetTickCount  tasks.o
    0x00003714   0x00003714   0x000001b8   Code   RO          302    .text.xTaskIncrementTick  tasks.o
    0x000038cc   0x000038cc   0x00000118   Code   RO          366    .text.xTaskPriorityDisinherit  tasks.o
    0x000039e4   0x000039e4   0x0000011a   Code   RO          364    .text.xTaskPriorityInherit  tasks.o
    0x00003afe   0x00003afe   0x00000002   PAD
    0x00003b00   0x00003b00   0x000000c6   Code   RO          334    .text.xTaskRemoveFromEventList  tasks.o
    0x00003bc6   0x00003bc6   0x00000002   PAD
    0x00003bc8   0x00003bc8   0x00000178   Code   RO          274    .text.xTaskResumeAll  tasks.o
    0x00003d40   0x00003d40   0x0000006c   Code   RO          423    .text.xTimerCreateTimerTask  timers.o
    0x00003dac   0x00003dac   0x000000b0   Code   RO          433    .text.xTimerGenericCommand  timers.o
    0x00003e5c   0x00003e5c   0x0000001c   Code   RO            3  * RESET               startup_rvmdk.o
    0x00003e78   0x00003e78   0x00000028   Code   RO          494    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x00003ea0   0x00003ea0   0x00000170   Code   RO          506    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x00004010   0x00004010   0x00000044   Code   RO          507    i.GPIOPinConfigure  driverlib.lib(gpio.o)
    0x00004054   0x00004054   0x0000001c   Code   RO          518    i.GPIOPinTypeGPIOOutput  driverlib.lib(gpio.o)
    0x00004070   0x00004070   0x0000001c   Code   RO          530    i.GPIOPinTypeUART   driverlib.lib(gpio.o)
    0x0000408c   0x0000408c   0x00000006   Code   RO          536    i.GPIOPinWrite      driverlib.lib(gpio.o)
    0x00004092   0x00004092   0x00000002   PAD
    0x00004094   0x00004094   0x00000064   Code   RO          828    i.IntEnable         driverlib.lib(interrupt.o)
    0x000040f8   0x000040f8   0x00000028   Code   RO          839    i.IntPrioritySet    driverlib.lib(interrupt.o)
    0x00004120   0x00004120   0x00000034   Code   RO          840    i.IntRegister       driverlib.lib(interrupt.o)
    0x00004154   0x00004154   0x00000154   Code   RO          946    i.SysCtlClockGet    driverlib.lib(sysctl.o)
    0x000042a8   0x000042a8   0x00000028   Code   RO          977    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x000042d0   0x000042d0   0x0000002c   Code   RO          981    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x000042fc   0x000042fc   0x0000000c   Code   RO         1297    i.UARTCharGet       driverlib.lib(uart.o)
    0x00004308   0x00004308   0x00000010   Code   RO         1298    i.UARTCharGetNonBlocking  driverlib.lib(uart.o)
    0x00004318   0x00004318   0x0000000c   Code   RO         1299    i.UARTCharPut       driverlib.lib(uart.o)
    0x00004324   0x00004324   0x0000000a   Code   RO         1301    i.UARTCharsAvail    driverlib.lib(uart.o)
    0x0000432e   0x0000432e   0x0000006e   Code   RO         1305    i.UARTConfigSetExpClk  driverlib.lib(uart.o)
    0x0000439c   0x0000439c   0x0000001e   Code   RO         1308    i.UARTDisable       driverlib.lib(uart.o)
    0x000043ba   0x000043ba   0x00000014   Code   RO         1310    i.UARTEnable        driverlib.lib(uart.o)
    0x000043ce   0x000043ce   0x0000000a   Code   RO         1313    i.UARTFIFOEnable    driverlib.lib(uart.o)
    0x000043d8   0x000043d8   0x00000006   Code   RO         1315    i.UARTFIFOLevelSet  driverlib.lib(uart.o)
    0x000043de   0x000043de   0x00000004   Code   RO         1318    i.UARTIntClear      driverlib.lib(uart.o)
    0x000043e2   0x000043e2   0x00000008   Code   RO         1320    i.UARTIntEnable     driverlib.lib(uart.o)
    0x000043ea   0x000043ea   0x00000002   PAD
    0x000043ec   0x000043ec   0x00000058   Code   RO         1321    i.UARTIntRegister   driverlib.lib(uart.o)
    0x00004444   0x00004444   0x0000001a   Code   RO         1697    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000445e   0x0000445e   0x00000002   PAD
    0x00004460   0x00004460   0x00000228   Data   RO          539    .constdata          driverlib.lib(gpio.o)
    0x00004688   0x00004688   0x0000010c   Data   RO          844    .constdata          driverlib.lib(interrupt.o)
    0x00004794   0x00004794   0x00000254   Data   RO          999    .constdata          driverlib.lib(sysctl.o)
    0x000049e8   0x000049e8   0x00000080   Data   RO         1338    .constdata          driverlib.lib(uart.o)
    0x00004a68   0x00004a68   0x00000064   Data   RO           31    .rodata.cities      main.o
    0x00004acc   0x00004acc   0x000000c1   Data   RO           29    .rodata.str1.1      main.o
    0x00004b8d   0x00004b8d   0x00000005   Data   RO          408    .rodata.str1.1      tasks.o
    0x00004b92   0x00004b92   0x00000008   Data   RO          476    .rodata.str1.1      timers.o
    0x00004b9a   0x00004b9a   0x00000002   PAD
    0x00004b9c   0x00004b9c   0x00000028   Data   RO           32    .rodata.timediff    main.o
    0x00004bc4   0x00004bc4   0x00000020   Data   RO         1772    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00004c00, Size: 0x0000066c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000018])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW           84    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000004   Data   RW          140    .data.uxCriticalNesting  port.o
    0x20000008   COMPRESSED   0x000003f8   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW          845    vtable              driverlib.lib(interrupt.o)


    Execution Region ER_ZI (Exec base: 0x20000670, Load base: 0x00004c18, Size: 0x000023d0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000670        -       0x00000060   Zero   RW         1639    .bss                c_w.l(libspace.o)
    0x200006d0        -       0x00000004   Zero   RW          480    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200006d4        -       0x00000004   Zero   RW          159    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x200006d8        -       0x00000004   Zero   RW          394    .bss.pxCurrentTCB   tasks.o
    0x200006dc        -       0x00000004   Zero   RW          478    .bss.pxCurrentTimerList  timers.o
    0x200006e0        -       0x00000004   Zero   RW          404    .bss.pxDelayedTaskList  tasks.o
    0x200006e4        -       0x00000004   Zero   RW          405    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200006e8        -       0x00000004   Zero   RW          479    .bss.pxOverflowTimerList  timers.o
    0x200006ec        -       0x00000064   Zero   RW          395    .bss.pxReadyTasksLists  tasks.o
    0x20000750        -       0x00000004   Zero   RW           30    .bss.selection      main.o
    0x20000754        -       0x00002000   Zero   RW          160    .bss.ucHeap         heap_1.o
    0x20002754        -       0x00000001   Zero   RW          138    .bss.ucMaxSysCallPriority  port.o
    0x20002755   0x00004c18   0x00000003   PAD
    0x20002758        -       0x00000004   Zero   RW          139    .bss.ulMaxPRIGROUPValue  port.o
    0x2000275c        -       0x00000004   Zero   RW          143    .bss.ulStoppedTimerCompensation  port.o
    0x20002760        -       0x00000004   Zero   RW          142    .bss.ulTimerCountsForOneTick  port.o
    0x20002764        -       0x00000004   Zero   RW          400    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002768        -       0x00000004   Zero   RW          399    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2000276c        -       0x00000004   Zero   RW          402    .bss.uxSchedulerSuspended  tasks.o
    0x20002770        -       0x00000004   Zero   RW          397    .bss.uxTaskNumber   tasks.o
    0x20002774        -       0x00000004   Zero   RW          396    .bss.uxTopReadyPriority  tasks.o
    0x20002778        -       0x00000014   Zero   RW          481    .bss.xActiveTimerList1  timers.o
    0x2000278c        -       0x00000014   Zero   RW          482    .bss.xActiveTimerList2  timers.o
    0x200027a0        -       0x00000014   Zero   RW          414    .bss.xDelayedTaskList1  tasks.o
    0x200027b4        -       0x00000014   Zero   RW          415    .bss.xDelayedTaskList2  tasks.o
    0x200027c8        -       0x00000004   Zero   RW          409    .bss.xIdleTaskHandle  tasks.o
    0x200027cc        -       0x00000004   Zero   RW          141    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x200027d0        -       0x00000004   Zero   RW          161    .bss.xNextFreeByte  heap_1.o
    0x200027d4        -       0x00000004   Zero   RW          410    .bss.xNextTaskUnblockTime  tasks.o
    0x200027d8        -       0x00000004   Zero   RW          413    .bss.xNumOfOverflows  tasks.o
    0x200027dc        -       0x00000004   Zero   RW          412    .bss.xPendedTicks   tasks.o
    0x200027e0        -       0x00000014   Zero   RW          407    .bss.xPendingReadyList  tasks.o
    0x200027f4        -       0x00000004   Zero   RW           26    .bss.xQueue1        main.o
    0x200027f8        -       0x00000004   Zero   RW           27    .bss.xQueue2        main.o
    0x200027fc        -       0x00000004   Zero   RW          401    .bss.xSchedulerRunning  tasks.o
    0x20002800        -       0x00000004   Zero   RW           28    .bss.xSemaphore0    main.o
    0x20002804        -       0x00000014   Zero   RW          406    .bss.xSuspendedTaskList  tasks.o
    0x20002818        -       0x00000014   Zero   RW          398    .bss.xTasksWaitingTermination  tasks.o
    0x2000282c        -       0x00000004   Zero   RW          403    .bss.xTickCount     tasks.o
    0x20002830        -       0x00000004   Zero   RW          475    .bss.xTimerQueue    timers.o
    0x20002834        -       0x00000004   Zero   RW          477    .bss.xTimerTaskHandle  timers.o
    0x20002838        -       0x00000004   Zero   RW          411    .bss.xYieldPending  tasks.o
    0x2000283c   0x00004c18   0x00000004   PAD
    0x20002840        -       0x00000000   Zero   RW           71    HEAP                startup_tm4c123.o
    0x20002840        -       0x00000200   Zero   RW           70    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       200          0          0          0       8200       1683   heap_1.o
       398          0          0          0          0        945   lcd.o
       296          0          0          0          0       2312   list.o
      1140          0        333          0         16       3017   main.o
      1704         16          0          4         17       4860   port.o
      3640          0          0          0          0      16560   queue.o
        28          2          0          0          0        248   startup_rvmdk.o
       276         24        620          0        512       5424   startup_tm4c123.o
       268          0          0          4          0       6721   system_tm4c123.o
      4716          0          5          0        260      25645   tasks.o
      1596         10          8          0         60       9695   timers.o
       288          0          0          0          0        848   uart.o

    ----------------------------------------------------------------------
     14656         52       1000       1024       9072      77958   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       106          0          2       1016          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
       538         22        552          0          0       9120   gpio.o
       192         20        268        620          0       2679   interrupt.o
       430         44        596          0          0       4054   sysctl.o
       326         18        128          0          0       7274   uart.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      2228        120       1544        620         96      24199   Library Totals
        14          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       702         16          0          0         96        956   c_w.l
      1486        104       1544        620          0      23127   driverlib.lib
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      2228        120       1544        620         96      24199   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     16884        172       2544       1644       9168      99597   Grand Totals
     16884        172       2544         24       9168      99597   ELF Image Totals (compressed)
     16884        172       2544         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                19428 (  18.97kB)
    Total RW  Size (RW Data + ZI Data)             10812 (  10.56kB)
    Total ROM Size (Code + RO Data + RW Data)      19452 (  19.00kB)

==============================================================================

